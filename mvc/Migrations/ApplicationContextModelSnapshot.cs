// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc;

namespace mvc.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mvc.Models.Humidity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataHora")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<float>("UR")
                        .HasColumnType("float(5)");

                    b.Property<float>("UmidTemp")
                        .HasColumnType("float(5)");

                    b.Property<float>("Umidade")
                        .HasColumnType("float(5)");

                    b.HasKey("Id");

                    b.ToTable("Humidity");
                });

            modelBuilder.Entity("mvc.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("Temperatura")
                        .HasColumnType("float(5)");

                    b.Property<int?>("UmidadeId")
                        .HasColumnType("int");

                    b.Property<int?>("VentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UmidadeId");

                    b.HasIndex("VentoId");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("mvc.Models.Wind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataHora")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<float>("Direcao")
                        .HasColumnType("float(10)");

                    b.Property<float>("Velocidade")
                        .HasColumnType("float(10)");

                    b.HasKey("Id");

                    b.ToTable("Wind");
                });

            modelBuilder.Entity("mvc.Models.Station", b =>
                {
                    b.HasOne("mvc.Models.Humidity", "Umidade")
                        .WithMany()
                        .HasForeignKey("UmidadeId");

                    b.HasOne("mvc.Models.Wind", "Vento")
                        .WithMany()
                        .HasForeignKey("VentoId");

                    b.Navigation("Umidade");

                    b.Navigation("Vento");
                });
#pragma warning restore 612, 618
        }
    }
}
